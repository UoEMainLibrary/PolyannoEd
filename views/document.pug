extends layout

include mixins/_polyanno

block content
  .container-fluid

    .row
      .col-md-6
        //- pre= h.dump(data)
        #polyannoDiv
          +polyanno()
        p
          button#savePolyanno.btn.btn-lg.btn-default.center(type='button') Save
      .col-md-6#uvCol
        .uv(
          data-locale='en-GB:English (GB),cy-GB:Cymraeg', 
          data-config= '/config/uv-config.json',
          data-uri='http://images.is.ed.ac.uk/luna/servlet/iiif/m/UoEsha~4~4~65346~164252/manifest', 
          data-sequenceindex='0', 
          data-canvasindex='0', 
          data-zoom='-0.3778,0,1.7556,1.3791', 
          data-rotation='0', 
          style='display:block; width:100%; height:100%; background-color: #fff'
          )
        script#embedUV(type='text/javascript', src='/lib/embed.js')


block script
  //- script#tes(type='text/javascript', src='/javascripts/tes.js')

  script.
    const data = !{JSON.stringify(data)}
    const vectors = Array.from(JSON.parse(data[0].vectors))
    const annotations = Array.from(JSON.parse(data[0].annotations))
    const transcriptions = Array.from(JSON.parse(data[0].transcriptions))
    const translations = Array.from(JSON.parse(data[0].translations))
    const editors = Array.from(JSON.parse(data[0].editors))
    //- const editors = []
    
    function loadToMap (vectors) {
      vectors.forEach(data => {
        var {coordinates, notFeature: { notGeometry: {notType} }, _id, transcription_fragment, translation_fragment, parent, children, OCD} = data

        var tempGeoJSON = { 'type': 'Feature', 'properties': {}, 'geometry': {} }
        var oldData = tempGeoJSON
        oldData.geometry.type = notType
        oldData.geometry.coordinates = [coordinates]
        oldData.properties.transcription_fragment = transcription_fragment
        oldData.properties.translation_fragment = translation_fragment
        oldData.properties.parent = parent
        oldData.properties.children = children
        oldData.properties.OCD = OCD

        L.geoJson(oldData,
          { style: {
            color: Polyanno.colours.default.vector
          },
            onEachFeature: function (feature, layer) {
              layer._leaflet_id = _id,
                allDrawnItems.addLayer(layer),
                layer.bindPopup(popupVectorMenu)
            }
          }).addTo(polyanno_map)
      })

    }

    function loadToPolyanno (vectors, annotations, transcriptions, translations, editors) {

      //- console.log(vectors, annotations, transcriptions, translations, editors)

      vectors.forEach( vector => {
        Object.setPrototypeOf(vector, Polyanno.vector.prototype)
        //- console.log(vector)
        Polyanno.vectors.add(vector)
      })

      annotations.forEach( annotation => {
        Object.setPrototypeOf( annotation, Polyanno.annotation.prototype)
        //- console.log(annotation)
        Polyanno.annotations.add(annotation)
      })

      transcriptions.forEach( transcription => {
        Object.setPrototypeOf (transcription, Polyanno.transcription.prototype)
        //- console.log(transcription)
        Polyanno.transcriptions.add(transcription)
      })

      translations.forEach( translation =>{
        Object.setPrototypeOf (translation, Polyanno.translation.prototype)
        //- console.log(translation)
        Polyanno.transcriptions.add(translation) 
      })

      editors.forEach( editor => {
        Object.setPrototypeOf (editor, Polyanno.editor.prototype)
        //- console.log(editor)
        Polyanno.transcriptions.add(editor)            
      })

      
    }
    
    function load (vectors, annotations, transcriptions, translations, editors) {
      loadToMap(vectors)
      loadToPolyanno(vectors, annotations, transcriptions, translations, editors)
    }

    $('document').ready( load(vectors, annotations, transcriptions, translations, editors) )


  script.
    $(document).bind('seadragonExtension.onCurrentViewUri', function (event, obj) {
      let uri = obj.fullUri
      uri = uri.split('/').slice(0, -4)
      uri.push('info.json')
      uri = uri.join('/')

      imageSelected = uri

      const html = 
      `<div class="row" id="polyanno-top-bar"><\/div>
      <div class="row" id="polyanno-page-body"><\/div>
      <script src="/javascripts/dragondrop.js"><\/script>
      <script src="/javascripts/alltheunicode.js"><\/script>
      <script src="/javascripts/polyanno.js"><\/script>
      <script src="/dist/PolyannoEd.bundle.js"><\/script>`
       
      console.log(html)
      $('#polyannoDiv').html(html)

    })